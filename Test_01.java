

 //아래 클래스의 소속 패키지를 선언
 //모든 클래스의 최상단에는 무조건 패키지 선언이 등장한다.
 package com.daum.erp;


 //Test_01이라는 클래스 선언
 public class Test_01 {
 //public이 붙는 경우 타 패키지의 클래스에서도 접근 가능하다는 뜻.
 //public을 뺄 경우 같은 패기지의 타 클래스에서 접근가능하다는 뜻.
 //자바는 클래스라는 최소 단위 프로그램으로 구성된다.
	
	
	//자바 가상머신이 가장 먼저 찾아서  호출이 되는 메소드가 main 메소드이다.
	//메인 메서드 안의프로그램이 실행된다.
	public static void main(String[] args) {
	
		//학생 이름이 저장 되는 메서드 만들기.
		//변수 선언 형식 => 자료형 + 변수명 = 데이터 ;
		// 스트링의 이중성 = 코딩형태는 기본형과 비슷하지만 기본형이 아니라 참조형이다. 
		
//		char student_name = '홍';
		String student_name = "홍길동"; //변수 선언
		
		student_name = "홍길당";// 변수 갱신
		
		
		// =  대입연산자 
		// 좌 우가 같다는 뜻이아니라 우항에서 좌항으로 대입하여 저장하겠다는 뜻이다.
		
		//*오라클 칼럼명은 대소문자를 가리지 않는다.
		//*오라클까지 고려한다면 _언더바를 사용하는게 맞다.
		
		
		//나이는 매년 변하기 때문에 출생연도만 남기는게 맞다.
		
		//int age = 17;   // 나이는 x		
		int birth_year = 2005;
		
		//학생의 생일은 2005.12.25이다 변수를 만들어 보자. 
		int birth_month = 12;
		int birth_date = 25;
		
		// 출생연도에만 final 을 변수명 앞에 붙여서 갱신할수 없게 할 수 있다. 생년월일은 고유하기 대문에 
		final String birth_day = "2005-12-25";// 현업에선 이렇게 만든다.
		//객체에서 년,월,일 각각 뗄 수 있는 방법이 있기 때문에.
		
//		birth_day = "2000-12-25"; //파이널이 붙었기 때문에 상수로 변환이 되어 에러가 발생한다.
		
		
		//학생의 몸무게가 저장되는 변수를 만들어보자(67kg)
		double weight_O = 67; // 67.0으로 해야 더블과 데이터형식이 맞는데 67로 해도 에러가 나지 않는다
		// 그 이유는 정수는 실수에 포함되기 때문에 내부적으로 67이 67.0으로 변한다.(=암시적형변환)
		int weight_X = 67; //몸무게는 변한다. 나중에 소수점이 나올수도 있다. 그래야 갱신할 수 있다. 
	
		
		// 국영수 점수가 들어가는 변수만들고 임의의 점수를 입력해보자.
		
		double korean_score = 20;
		double english_score = 20;
		double math_score = 20;

		
		
		//학생의 결혼 여부 
		boolean marriage = true;
		
		
		
		
		
		
		
	}

}
